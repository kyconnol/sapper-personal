!function(){"use strict";const e=["/client/index.5c4ecf22.js","/client/index.4b2d8795.js","/client/index.121f0fb7.js","/client/[slug].e84058df.js","/client/devils-advocate.4bc4e596.js","/client/client.2795d7ba.js"].concat(["/service-worker-index.html","/bootstrap.min.css","/headshot.jpg","/k3s_screens/REFERENCE - working netplan on k3s server.png","/k3s_screens/add_worker_node.png","/k3s_screens/cluster_running.png","/k3s_screens/disable_swap_file.png","/k3s_screens/kernel_container_features.png","/k3s_screens/kvm_ready.png","/k3s_screens/original_netplan_config.png","/k3s_screens/use_entire_disk.png","/manifest.json","/spinnaker.min.css"]),s=new Set(e);self.addEventListener("install",s=>{s.waitUntil(caches.open("cache1604233049841").then(s=>s.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const s of e)"cache1604233049841"!==s&&await caches.delete(s);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const n=new URL(e.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&s.has(n.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1604233049841").then(async s=>{try{const n=await fetch(e.request);return s.put(e.request,n.clone()),n}catch(n){const t=await s.match(e.request);if(t)return t;throw n}}))))})}();
